@use './styles/fonts';
@use './styles/theme';

/* Global Styles */
body {
  margin: 0;
  font-family: fonts.$font-primary;
  scroll-behavior: smooth;
  background-color: theme.$bg-primary;
  color: theme.$text-primary;
  line-height: 1.6;
  overflow-x: hidden;
}

/* Modern Container */
.container {
  width: 100%;
  max-width: 100%;
  margin: 0 auto;
  padding-left: 15px;
  padding-right: 15px;
  box-sizing: border-box;
}

.section-padding {
  padding: 80px 0;
}

.section-title {
  font-family: fonts.$font-display;
  font-size: clamp(2.5rem, 5vw, 4rem);
  font-weight: 800;
  margin-bottom: 2rem;
  line-height: 1.1;
  background: theme.$gradient-text;
  -webkit-background-clip: text;
  background-clip: text;
  -webkit-text-fill-color: transparent;
  text-align: center;
}

.section-subtitle {
  font-family: fonts.$font-secondary;
  font-size: clamp(1rem, 2vw, 1.5rem);
  text-align: center;
  max-width: 1200px;
  margin: 0 auto 4rem;
  opacity: 0.8;
}

/* Navigation Bar */
nav {
  position: fixed;
  top: 0;
  width: 100%;
  background-color: rgba(0, 0, 0, 0.8);
  backdrop-filter: blur(10px);
  z-index: 1000;
  transition: all 0.3s ease, transform 0.4s cubic-bezier(0.19, 1, 0.22, 1);
  will-change: transform;

  &.scrolled {
    backdrop-filter: blur(15px);
    border-bottom: 1px solid rgba(255, 255, 255, 0.05);
  }
  
  &.hidden {
    transform: translateY(-100%);
    pointer-events: none;
  }
  
  &.visible {
    transform: translateY(0);
    pointer-events: auto;
  }

  ul {
    list-style-type: none;
    margin: 0;
    padding: 0;
    display: flex;
    justify-content: center;
    gap: clamp(1rem, 3vw, 3rem);
  }
}

// Highlight active nav link like hover
.brutalist-nav-link.active {
  color: theme.$accent !important;
  border-bottom: 2px solid theme.$accent;
}

.btn {
  transition: all 0.4s cubic-bezier(0.165, 0.84, 0.44, 1);
  background-color: transparent;
  border: none;
  position: relative;
  will-change: transform;
}

.btn {
  color: theme.$text-light;
  cursor: pointer;
  font-family: fonts.$font-secondary;
  font-size: clamp(0.9rem, 1vw, 1.1rem);
  font-weight: 500;
  text-transform: uppercase;
  letter-spacing: 1px;
  padding: 0.75rem 1.5rem;
}

.navigate-button {
  position: relative;
  overflow: hidden;
}

.navigate-button:hover {
  color: theme.$accent;
}

.navigate-button::after {
  content: '';
  position: absolute;
  bottom: 0;
  left: 0;
  width: 100%;
  height: 2px;
  background: theme.$accent;
  transform: scaleX(0);
  transform-origin: right;
  transition: transform 0.6s cubic-bezier(0.19, 1, 0.22, 1);
}

.navigate-button:hover::after {
  transform: scaleX(1);
  transform-origin: left;
}

.in-touch-button {
  background: theme.$gradient-button;
  color: theme.$text-light;
  border-radius: 30px;
  padding: 1rem 2.5rem;
  font-weight: 600;
  box-shadow: 0 4px 20px rgba(255, 95, 21, 0.3);
  position: relative;
  overflow: hidden;
  z-index: 1;
}

.in-touch-button::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: theme.$gradient-button-hover;
  z-index: -1;
  opacity: 0;
  transition: opacity 0.5s ease;
}

.in-touch-button:hover::before {
  opacity: 1;
}

/* Hero Section */
#hero {
  position: relative;
  height: 100vh;
  display: flex;
  justify-content: center;
  align-items: center;
  text-align: left;
  color: theme.$text-light;
}

#hero .overlay {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: linear-gradient(135deg, rgba(0, 0, 0, 0.8) 0%, rgba(0, 0, 0, 0.4) 100%);
}

#hero .hero-content {
  position: relative;
  z-index: 2;
  max-width: 1200px;
  width: 90%;
  padding: 0 2rem;
}

#hero h1 {
  font-family: fonts.$font-display;
  font-size: clamp(3.5rem, 10vw, 8rem);
  margin: 0;
  line-height: 1;
  background: theme.$gradient-text;
  -webkit-background-clip: text;
  background-clip: text;
  -webkit-text-fill-color: transparent;
  animation: fadeUp 1s ease forwards;
}

#hero p {
  font-family: fonts.$font-secondary;
  font-size: clamp(1.25rem, 3vw, 2rem);
  margin: 2rem 0;
  max-width: 800px;
  opacity: 0;
  animation: fadeUp 1s 0.3s ease forwards;
}

#hero .cta {
  opacity: 0;
  animation: fadeUp 1s 0.6s ease forwards;
}

#hero .mouse-scroll-indicator {
  position: absolute;
  bottom: 40px;
  left: 50%;
  transform: translateX(-50%);
  display: flex;
  flex-direction: column;
  align-items: center;
  z-index: 3;
  opacity: 0;
  animation: fadeIn 1s 1.2s ease forwards;
}

#hero .mouse {
  width: 30px;
  height: 50px;
  border: 2px solid theme.$accent;
  border-radius: 15px;
  position: relative;
  opacity: 0.6;
}

#hero .wheel {
  background: theme.$accent;
  width: 6px;
  height: 10px;
  border-radius: 3px;
  position: absolute;
  top: 10px;
  left: 50%;
  transform: translateX(-50%);
  animation: mouseWheel 1.5s infinite;
}

#hero .arrow-scroll {
  margin-top: 10px;
}

#hero .arrow-scroll span {
  display: block;
  width: 10px;
  height: 10px;
  border-bottom: 2px solid theme.$accent;
  border-right: 2px solid theme.$accent;
  transform: rotate(45deg);
  margin: 0 0 3px 4px;
  animation: arrowDown 1.5s infinite;
  opacity: 0.6;
}

#hero .arrow-scroll span:nth-child(2) {
  animation-delay: 0.2s;
}

#hero .arrow-scroll span:nth-child(3) {
  animation-delay: 0.4s;
}

/* Add scroll indicator styles */
.scroll-indicator-container {
  position: absolute;
  bottom: 30px;
  left: 50%;
  transform: translateX(-50%);
  z-index: 100;
}

.scroll-indicator {
  display: flex;
  flex-direction: column;
  align-items: center;
  cursor: pointer;
}

.scroll-text {
  color: #000;
  font-size: 12px;
  font-weight: bold;
  text-transform: uppercase;
  letter-spacing: 2px;
  margin-top: 5px;
  animation: fadeInOut 2s ease-in-out infinite;
}

.chevron {
  width: 20px;
  height: 8px;
  opacity: 0;
  transform: scale(0.3);
  animation: move-chevron 3s ease-out infinite;
}

.chevron:first-child {
  animation: move-chevron 3s ease-out 1s infinite;
}

.chevron:nth-child(2) {
  animation: move-chevron 3s ease-out 2s infinite;
}

.chevron:before,
.chevron:after {
  content: '';
  position: absolute;
  top: 0;
  height: 100%;
  width: 50%;
  background: #000;
}

.chevron:before {
  left: 0;
  transform: skewY(30deg);
}

.chevron:after {
  right: 0;
  width: 50%;
  transform: skewY(-30deg);
}

@keyframes move-chevron {
  25% {
    opacity: 1;
    transform: translateY(9px) scale(0.8);
  }
  33% {
    opacity: 1;
    transform: translateY(13px) scale(0.8);
  }
  67% {
    opacity: 1;
    transform: translateY(17px) scale(0.8);
  }
  100% {
    opacity: 0;
    transform: translateY(25px) scale(0.8);
  }
}

@keyframes fadeInOut {
  0%, 100% {
    opacity: 0.3;
  }
  50% {
    opacity: 1;
  }
}

/* Skills Section */
#skills {
  background-color: #f8f9fa; /* Light background instead of dark */
  position: relative;
  overflow: hidden;
  border-top: 3px solid rgba(0, 0, 0, 0.1);
  border-bottom: 3px solid rgba(0, 0, 0, 0.1);
}

.brutalist-grid.responsive-grid {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(180px, 1fr)); /* Even smaller cards */
  gap: 1.5rem;
  width: 100%;
  max-width: 1200px;
  margin: 0 auto;
}

.brutalist-grid.responsive-grid-knowledge {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); /* Even smaller cards */
  gap: 1.5rem;
  width: 100%;
  max-width: 1200px;
}

.skill-card {
  padding: 1.5rem !important;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: flex-start;
  height: auto;
  min-height: 200px;
  background-color: white !important; /* White background for cards */
  border: 2px solid #000 !important; /* Bold border */
  box-shadow: 5px 5px 0px #000 !important; /* Brutalist shadow */
  transition: transform 0.3s ease, box-shadow 0.3s ease;
  transition: opacity 0.5s ease, height 0.5s ease, margin 0.5s ease, padding 0.5s ease;
  overflow: hidden;
}

.skill-card:hover {
  transform: translateY(-5px) !important;
  box-shadow: 8px 8px 0px #000 !important;
}

.skill-card.deleting {
  opacity: 0;
  height: 0;
  margin: 0;
  padding: 0;
}

.skill-card.deleting h3,
.skill-card.deleting p {
  opacity: 0;
  transition: opacity 0.5s ease;
}

.skill-card .skill-icon-wrapper {
  width: 50px;
  height: 50px;
  margin-bottom: 1rem;
  display: flex;
  align-items: center;
  justify-content: center;
  background-color: rgba(0,0,0,0.03);
  padding: 10px;
  border-radius: 50%;
}

.skill-card h3 {
  margin: 0.5rem 0;
  font-size: 1.2rem;
  text-align: center;
  color: #000 !important;
}

.skill-card p.brutalist-text {
  margin: 0.5rem 0 0;
  font-size: 0.85rem;
  text-align: center;
  line-height: 1.4;
  color: #333 !important; /* Darker text for better readability */
}

/* Improve section heights and spacing */
section:not(#hero) {
  min-height: 100vh; /* Full viewport height */
  max-height: none;
  display: flex;
  align-items: center;
  justify-content: center;
  padding-top: 0; /* Adjusted in the content-container */
  padding-bottom: 0;
}

.section-content-container {
  padding-top: 80px; /* Header height + some extra space */
  padding-bottom: 60px;
  width: 100%;
  max-width: 1200px;
  margin: 0 auto;
  position: relative;
}

/* Improve headings and subtitles */
.brutalist-title {
  color: #000; /* Black text */
  font-size: clamp(2rem, 5vw, 3.5rem);
  font-weight: 800;
  position: relative;
  display: inline-block;
  margin: 0 auto 1.5rem;
  text-align: center;
}

.brutalist-title::after {
  content: '';
  position: absolute;
  bottom: -10px;
  left: 10%;
  right: 10%;
  height: 4px;
  background-color: #000;
}

.section-subtitle {
  color: #333; /* Darker text */
  opacity: 0.9;
  margin-bottom: 2.5rem;
  text-align: center;
  max-width: 1200px;
}

/* Navigation height calculation */
:root {
  --nav-height: 60px;
}

nav {
  height: var(--nav-height);
  display: flex;
  align-items: center;
}

/* Adjust scroll-snap behavior */
html {
  scroll-snap-type: y proximity;
  scroll-behavior: smooth;
}

section {
  scroll-snap-align: start;
}

/* knowledge card improvements */
.brutalist-knowledge {
  background-color: white;
  border: 2px solid #000;
  box-shadow: 5px 5px 0px #000;
}

.brutalist-knowledge-header {
  background-color: #000;
  color: white;
  padding: 0.25rem;
}

.brutalist-knowledge-content {
  padding: 1rem;
}

/* Contact Section */
#contact {
  background-color: theme.$bg-primary;
  position: relative;
  min-height: 60vh; /* Make section smaller by reducing min-height */
}

#contact form {
  display: flex;
  flex-direction: column;
  width: 100%;
  max-width: 600px; /* Reduce max width from 700px */
  margin: auto;
  background: theme.$bg-card;
  padding: 2rem; /* Reduce padding from 3rem */
  border-radius: 16px;
  box-shadow: theme.$shadow-card;
  border: 1px solid rgba(255, 255, 255, 0.1);
}

#contact label {
  font-family: fonts.$font-secondary;
  font-size: 1rem;
  margin-bottom: 0.5rem;
  color: theme.$text-primary;
}

#contact input,
#contact textarea {
  padding: 0.75rem; /* Smaller padding to reduce size */
  border: 1px solid rgba(0, 0, 0, 0.4); /* Darker border for better visibility */
  border-radius: 8px;
  background: #ffffff; /* Explicitly set white background */
  color: #000000; /* Set to black for maximum visibility */
  font-family: fonts.$font-primary;
  font-weight: 500; /* Make text slightly bolder */
  margin-bottom: 1rem; /* Reduced from 1.5rem */
  resize: vertical;
  transition: all 0.3s ease;
}

#contact input::placeholder,
#contact textarea::placeholder {
  color: #666666; /* Dark gray for placeholders */
  opacity: 1; /* Ensure placeholders are visible */
}

#contact input:focus,
#contact textarea:focus {
  outline: none;
  border-color: #000000; /* Black border on focus */
  box-shadow: 0 0 0 2px rgba(0, 0, 0, 0.2);
}

#contact input[type="submit"] {
  background: theme.$gradient-button;
  color: white;
  border: none;
  cursor: pointer;
  font-weight: 600;
  font-size: 1rem;
  padding: 0.75rem 1.5rem; /* Make the submit button smaller */
  border-radius: 8px;
  transition: all 0.3s ease;
  text-transform: uppercase;
  letter-spacing: 1px;
  margin-top: 0.5rem; /* Adjust margin */
}

#contact input[type="submit"]:hover {
  transform: translateY(-2px);
  box-shadow: 0 10px 20px rgba(255, 95, 21, 0.3);
}

/* knowledge Card Animations */
.knowledge-grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
  gap: 2rem;
}

.knowledge-card {
  perspective: 1000px;
  height: 350px;
}

.knowledge-card-inner {
  position: relative;
  width: 100%;
  height: 100%;
  transition: transform 0.8s cubic-bezier(0.165, 0.84, 0.44, 1);
  transform-style: preserve-3d;
  border-radius: 16px;
  box-shadow: theme.$shadow-card;
}

.knowledge-card:hover .knowledge-card-inner {
  transform: rotateY(180deg);
}

.knowledge-card-front, .knowledge-card-back {
  position: absolute;
  width: 100%;
  height: 100%;
  -webkit-backface-visibility: hidden;
  backface-visibility: hidden;
  border-radius: 16px;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  padding: 2rem;
  text-align: center;
}

.knowledge-card-front {
  background: theme.$bg-card;
  border: 1px solid rgba(255, 255, 255, 0.1);
}

.knowledge-card-back {
  background: theme.$gradient-card-back;
  transform: rotateY(180deg);
  color: theme.$text-light;
}

/* Contact Form Enhancements */
.contact-form {
  position: relative;
}

.form-field {
  position: relative;
  margin-bottom: 1rem; /* Make form fields more compact */
}

.form-input {
  width: 100%;
  background: theme.$bg-input;
  padding: 1rem;
  border: 1px solid rgba(255, 255, 255, 0.1);
  border-radius: 8px;
  color: theme.$text-primary;
  font-family: fonts.$font-primary;
  transition: border-color 0.3s ease, box-shadow 0.3s ease;
}

.form-input:focus {
  outline: none;
  border-color: theme.$accent;
  box-shadow: 0 0 0 2px rgba(255, 95, 21, 0.2);
}

.form-input-highlight {
  position: absolute;
  bottom: 0;
  left: 0;
  height: 2px;
  width: 0;
  background: theme.$accent;
  transition: width 0.4s cubic-bezier(0.19, 1, 0.22, 1);
}

.form-input:focus ~ .form-input-highlight {
  width: 100%;
}

.submit-btn {
  background: theme.$gradient-button;
  color: white;
  border: none;
  border-radius: 8px;
  padding: 1rem 2rem;
  font-weight: 600;
  font-size: 1rem;
  cursor: pointer;
  transition: all 0.3s ease;
  display: flex;
  align-items: center;
  justify-content: space-between;
  gap: 1rem;
  margin-top: 1rem;
  will-change: transform;
}

.submit-btn svg {
  transition: transform 0.3s ease;
}

.submit-btn:hover svg {
  transform: translateX(5px);
}

/* Background Grid for About Section */
.bg-grid {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-image: 
    linear-gradient(rgba(255, 255, 255, 0.02) 1px, transparent 1px),
    linear-gradient(90deg, rgba(255, 255, 255, 0.02) 1px, transparent 1px);
  background-size: 50px 50px;
  z-index: -1;
  opacity: 0.4;
}

/* Section Background Colors */
#about {
  background-color: #e76f51; /* Coral/salmon color as requested */
  color: white; /* Ensure text remains readable */
}

#about .brutalist-title,
#about .section-subtitle,
#about .brutalist-text {
  color: white;
}

#about .brutalist-box {
  background-color: white;
  border: 2px solid black;
  box-shadow: 5px 5px 0px rgba(0, 0, 0, 0.3);
}

#about .about-content .brutalist-text {
  color: #000;               // existing override
  font-size: 1.125rem;       // increased for better readability
}

#knowledge {
  background-color: #4361ee; /* Complementary blue */
  color: white;
}

#knowledge .brutalist-title,
#knowledge .section-subtitle {
  color: white;
}

#knowledge .brutalist-title::after {
  background-color: white;
}

#contact {
  background-color: #2a9d8f; /* Teal color */
  color: white;
}

#contact .brutalist-title,
#contact .section-subtitle {
  color: white;
}

#contact .brutalist-title::after {
  background-color: white;
}

#contact form {
  background-color: white;
  border: 2px solid #000;
  box-shadow: 5px 5px 0px #000;
}

#contact label {
  color: #333;
}

/* Override title styles for colored sections */
#about .brutalist-title::after,
#knowledge .brutalist-title::after,
#contact .brutalist-title::after {
  background-color: white;
}

/* Fix skill section styling */
#skills {
  background-color: #f8f9fa;
  color: #333;
}

/* Make sure content in colored sections is readable */
section[id] .section-content-container {
  position: relative;
  z-index: 2;
}

/* Add texture to colored backgrounds */
#about::before,
#knowledge::before,
#contact::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-image: url("data:image/svg+xml,%3Csvg width='20' height='20' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M0 0h20v20H0z' fill='%23ffffff' fill-opacity='0.05'/%3E%3C/svg%3E");
  z-index: 1;
}

/* Animations */
@keyframes fadeUp {
  from {
    opacity: 0;
    transform: translateY(30px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes mouseWheel {
  0% {
    opacity: 1;
    transform: translateX(-50%) translateY(0);
  }
  100% {
    opacity: 0;
    transform: translateX(-50%) translateY(15px);
  }
}

@keyframes arrowDown {
  0% {
    opacity: 0;
  }
  50% {
    opacity: 0.6;
  }
  100% {
    opacity: 0;
  }
}

@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

@keyframes glitch {
  0% {
    transform: translate(0);
  }
  20% {
    transform: translate(-2px, 2px);
  }
  40% {
    transform: translate(-2px, -2px);
  }
  60% {
    transform: translate(2px, 2px);
  }
  80% {
    transform: translate(2px, -2px);
  }
  100% {
    transform: translate(0);
  }
}

@keyframes float {
  0% {
    transform: translateY(0) rotate(0deg);
  }
  50% {
    transform: translateY(-20px) rotate(180deg);
  }
  100% {
    transform: translateY(0) rotate(360deg);
  }
}

@keyframes pulse {
  0% {
    transform: scale(1);
    opacity: 0.5;
  }
  50% {
    transform: scale(1.05);
    opacity: 0.8;
  }
  100% {
    transform: scale(1);
    opacity: 0.5;
  }
}

@keyframes revealFromBlur {
  0% {
    opacity: 0;
    filter: blur(15px);
    transform: scale(1.05) translateY(20px);
  }
  100% {
    opacity: 1;
    filter: blur(0);
    transform: scale(1) translateY(0);
  }
}

@keyframes slideInParallax {
  0% {
    opacity: 0;
    transform: translateX(60px) scale(0.95);
    filter: brightness(0.8) contrast(0.8);
  }
  60% {
    opacity: 1;
    filter: brightness(0.9) contrast(0.9);
  }
  100% {
    opacity: 1;
    transform: translateX(20px) scale(1);
    filter: brightness(1) contrast(1);
  }
}

@keyframes contentReveal {
  0% {
    opacity: 0;
    transform: translate3d(-20px, 20px, -40px) rotate(-1deg);
    box-shadow: 10px 10px 50px rgba(0,0,0,0.2);
    filter: blur(5px);
  }
  30% {
    opacity: 0.8;
    filter: blur(2px);
  }
  100% {
    opacity: 1;
    transform: translate3d(-10px, 0, 0) rotate(-1deg);
    box-shadow: 5px 5px 15px rgba(0,0,0,0.1);
    filter: blur(0);
  }
}

.animate-on-scroll {
  opacity: 0;
  transform: translateY(30px);
  transition: opacity 0.8s ease, transform 0.8s cubic-bezier(0.19, 1, 0.22, 1);
}

.animate-in {
  opacity: 1;
  transform: translateY(0);
}

.visible .animate-on-scroll {
  opacity: 1;
  transform: translateY(0);
}

/* Text Scramble Effect */
.scramble-text {
  min-height: 1em;
}

.scramble-char {
  animation: glitch 0.2s linear forwards;
  display: inline-block;
}

.brutalist-text {
  font-family: 'Space Grotesk', sans-serif !important;
}

/* Responsive */
@media (max-width: 768px) {
  .section-padding {
    padding: 4rem 0;
  }
  
  #skills .skills-list {
    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
  }
  
  #contact form {
    padding: 2rem;
  }
  
  #hero .mouse-scroll-indicator {
    display: none;
  }
  
  .knowledge-card {
    height: 280px;
  }
}

@media (max-width: 480px) {
  .submit-btn {
    width: 100%;
    justify-content: center;
  }
  
  #hero h1 {
    font-size: clamp(2.5rem, 10vw, 4rem);
  }
  
  #hero p {
    font-size: clamp(1rem, 3vw, 1.5rem);
  }
  
  .knowledge-card-front, .knowledge-card-back {
    padding: 1.5rem;
  }
}

// Fix for horizontal overflow in mobile views

html, body {
  width: 100%;
  margin: 0;
  padding: 0;
  overflow-x: hidden;
}

html {
  scroll-behavior: smooth;
  scroll-snap-type: y proximity; /* Changed from 'mandatory' to 'proximity' for better UX */
  overflow-y: scroll;
}

.brutalist-grid-bg {
  width: 100%;
  max-width: 100vw;
  overflow-x: hidden;
  position: relative;
}

// Ensure images don't overflow their containers
img {
  max-width: 100%;
  height: auto;
}

// Add these styles to properly handle the fixed header

.content-wrapper {
  width: 100%;
}

@media (max-width: 768px) {
  .content-wrapper {
    padding-top: 60px; // Match the body padding-top
  }
  
  // Make sure hero section doesn't have extra padding
  .brutalist-hero {
    padding-top: 0 !important; 
  }
}

.brutalist-hero-image {
  transform: perspective(1000px) translateX(20px) translateZ(0);
  background-size: contain !important;
  background-repeat: no-repeat !important;
  background-position: center !important;
  opacity: 0;
  will-change: transform, opacity, filter;
  animation: slideInParallax 1.8s cubic-bezier(0.23, 1, 0.32, 1) forwards;
  animation-delay: 0.3s;
}

.brutalist-hero-content {
  position: relative;                   
  z-index: 2;
  opacity: 0;
  perspective: 1000px;
  transform-style: preserve-3d;
  will-change: transform, opacity;
  animation: contentReveal 1.5s cubic-bezier(0.19, 1, 0.22, 1) forwards;
  animation-delay: 1s;
  transform-origin: center center;
  /* Restore the sloped/skewed effect */
  transform: translate3d(-50px, 0, 0) rotate(-1deg);
}

.brutalist-box {
  transform: skew(-2deg, 0);
  transform-origin: center center;
}

.brutalist-button {
  transform: skew(-2deg, 0);
  transform-origin: center center;
  transition: transform 0.3s ease;
  color: #000000;
  background-color: #ffffff;
}

.brutalist-button:hover {
  transform: skew(-2deg, 0) translateY(-3px);
}

.brutalist-hero-subtitle {
  opacity: 0;
  transform: translateY(15px);
  animation: revealFromBlur 1.2s cubic-bezier(0.25, 0.46, 0.45, 0.94) forwards;
  animation-delay: 1.8s;
}

.cta.animate-on-scroll {
  opacity: 0;
  transform: translateY(15px);
  animation: revealFromBlur 1.2s cubic-bezier(0.25, 0.46, 0.45, 0.94) forwards;
  animation-delay: 2.2s;
}

section {
  scroll-snap-align: start;
  scroll-snap-stop: always;
  position: relative;
  overflow: hidden;
}

section#hero {
  min-height: 100vh;
  scroll-snap-align: start;
}

/* Adjust height for content sections */
section:not(#hero) {
  min-height: 100vh; /* Full viewport height */
  max-height: none; /* Remove any max height constraints */
  display: flex;
  align-items: center;
  justify-content: center;
  padding-top: 0; /* Adjusted in the content-container */
  padding-bottom: 0;
}

/* Ensure the last section fills at least the viewport */
section:last-of-type {
  min-height: calc(100vh - 160px); /* Viewport height minus padding */
}

/* Add a small visual indicator for section transitions */
section:not(#hero)::before {
  content: '';
  position: absolute;
  top: 0;
  left: 15%;
  right: 15%;
  height: 3px;
  background-color: rgba(0, 0, 0, 0.1);
}
